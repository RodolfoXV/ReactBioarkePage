{"version":3,"sources":["config/Config.js","components/AddProducts.js","images/logo.svg","global/CartReducer.js","global/CartContext.js","components/Navbar.js","global/ProductsContext.js","components/Products.js","components/Home.js","components/Signup.js","components/Login.js","components/Cart.js","components/Cashout.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","storage","AddProducts","useState","productName","setProductName","productPrice","setProductPrice","productStock","setProductStock","productImg","setProductImg","error","setError","types","className","autoComplete","onSubmit","e","preventDefault","ref","name","put","on","snapshot","progress","bytesTransferred","totalBytes","console","log","err","message","child","getDownloadURL","then","url","collection","add","ProductName","ProductPrice","Number","ProductStock","ProductImg","document","getElementById","value","catch","htmlFor","type","required","onChange","target","selectedFile","files","includes","toast","configure","CartReducer","state","action","product","index","updatedPrice","updatedQty","shoppingCart","totalPrice","totalQty","find","ProductID","id","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","undefined","qty","cart","TotalProductPrice","findIndex","filtered","filter","CartContext","createContext","CartContextProvider","props","useReducer","dispatch","Provider","children","Navbar","user","history","useHistory","useContext","to","src","logo","alt","icon","onClick","signOut","push","ProductsContext","ProductsContextProvider","products","prevProducts","this","onSnapshot","docChanges","forEach","change","doc","data","setState","React","Component","Products","length","map","Home","Signup","setName","email","setEmail","password","setPassword","createUserWithEmailAndPassword","cred","uid","set","Name","Email","Password","Login","signInWithEmailAndPassword","Cart","useEffect","onAuthStateChanged","ic_add","size","ic_remove","iosTrashOutline","style","marginTop","Cashout","cell","setCell","address","setAddress","successMsg","setSuccessMsg","time","Date","getTime","BuyerName","BuyerEmail","BuyerCell","BuyerAddress","BuyerPayment","BuyerQuantity","setTimeout","disabled","placeholder","NotFound","App","get","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.a61b5ec3.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyApsOqgz-H83VtrxPvUxDolYdkItJmPVvM\",\r\n  authDomain: \"bioarke-react.firebaseapp.com\",\r\n  projectId: \"bioarke-react\",\r\n  storageBucket: \"bioarke-react.appspot.com\",\r\n  messagingSenderId: \"1036778769320\",\r\n  appId: \"1:1036778769320:web:eac4115e0713072c08ab9d\",\r\n  measurementId: \"G-M1N1MXJBK3\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\nexport { auth, db, storage} \r\n\r\n\r\n","import React,{useState} from 'react';\r\nimport {storage, db } from '../config/Config'\r\n\r\nexport const AddProducts = () => {\r\n\r\n    const [productName, setProductName] = useState('');\r\n    const [productPrice, setProductPrice] = useState(0);\r\n    const [productStock, setProductStock] = useState(0);\r\n    const [productImg, setProductImg] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const types = ['image/png', 'image/jpeg']\r\n    \r\n    const productImgHandler = (e) =>{\r\n        let selectedFile = e.target.files[0];\r\n        if (selectedFile && types.includes(selectedFile.type)){\r\n            setProductImg(selectedFile);\r\n            setError('')\r\n        }\r\n        else{\r\n            setProductImg(null)\r\n            setError(\"Por favor seleciona un tipo de archivo valido (png o jpeg)\")\r\n        }\r\n    }\r\n\r\n    const addproducts = (e) =>{\r\n        e.preventDefault();\r\n        const uploadTask = storage.ref(`product-images/${productImg.name}`).put(productImg);\r\n        uploadTask.on('state_changed', snapshot => {\r\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            console.log(progress);\r\n        }, err => setError(err.message)\r\n            , () => {\r\n                storage.ref('product-images').child(productImg.name).getDownloadURL().then(url => {\r\n                    db.collection('Products').add({\r\n                        ProductName: productName,\r\n                        ProductPrice: Number(productPrice),\r\n                        ProductStock: Number(productStock),\r\n                        ProductImg: url\r\n                    }).then(() => {\r\n                        setProductName('');\r\n                        setProductPrice(0)\r\n                        setProductStock(0)\r\n                        setProductImg('');\r\n                        setError('');\r\n                        document.getElementById('file').value = '';\r\n                    }).catch(err => setError(err.message))\r\n                })\r\n            })\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <br/>\r\n            <h2>Agregar Productos</h2>\r\n            <hr/>\r\n            <form autoComplete='off' className='form-group container' onSubmit={addproducts}>\r\n                    <label htmlFor='product-name'>Nombre del Producto</label>\r\n                    <br/>\r\n                    <input type='text' className='form-control' required\r\n                        onChange={(e)=>setProductName(e.target.value)} value={productName}/>\r\n                    <br/>\r\n                    <label htmlFor='product-price'>Precio de Producto</label>\r\n                    <br/>\r\n                    <input type='number' className='form-control' required \r\n                        onChange={(e)=>setProductPrice(e.target.value)} value={productPrice}/>\r\n                    <br/>\r\n                    <label htmlFor='product-stock'>Stock del Producto</label>\r\n                    <br/>\r\n                    <input type='number' className='form-control' required \r\n                        onChange={(e)=>setProductStock(e.target.value)} value={productStock}/>\r\n                    <br/>\r\n                    <label htmlFor='product-img'>Imagen del Producto</label>\r\n                    <br/>\r\n                    <input type='file' className='form-control' onChange={productImgHandler}/>\r\n                    <br/>\r\n                    <hr/>\r\n                    <button className='btn btn-success btn-md mybtn'>Agregar a Inventario</button>\r\n            </form>\r\n            <br/>\r\n            {error&& <span className='error-msg'>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.f8ecf7f0.svg\";","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nexport const CartReducer = (state, action) => {\r\n\r\n    const { shoppingCart, totalPrice, totalQty } = state;\r\n\r\n    let product;\r\n    let index;\r\n    let updatedPrice;\r\n    let updatedQty;\r\n\r\n    switch (action.type) {\r\n\r\n        case 'ADD_TO_CART':\r\n\r\n            const check = shoppingCart.find(product => product.ProductID === action.id);\r\n            if (check) {\r\n                toast.info('Este producto ya se encuentra en el carrito si desea otra unidad, ir al detalle', {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    progress: undefined,\r\n                });\r\n                return state;\r\n            }\r\n            else {\r\n                product = action.product;\r\n                product['qty'] = 1;\r\n                product['TotalProductPrice'] = product.ProductPrice * product.qty;\r\n                updatedQty = totalQty + 1;\r\n                updatedPrice = totalPrice + product.ProductPrice;\r\n                return {\r\n                    shoppingCart: [product, ...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\r\n                }\r\n            }\r\n\r\n        case 'INC':\r\n            product = action.cart;\r\n            product.qty = ++product.qty;\r\n            product.TotalProductPrice = product.qty * product.ProductPrice;\r\n            updatedQty = totalQty + 1;\r\n            updatedPrice = totalPrice + product.ProductPrice;\r\n            index = shoppingCart.findIndex(cart => cart.ProductID === action.id);\r\n            shoppingCart[index] = product;\r\n            return {\r\n                shoppingCart: [...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\r\n            }\r\n\r\n        case 'DEC':\r\n            product = action.cart;\r\n            if (product.qty > 1) {\r\n                product.qty = product.qty - 1;\r\n                product.TotalProductPrice = product.qty * product.ProductPrice;\r\n                updatedPrice = totalPrice - product.ProductPrice;\r\n                updatedQty = totalQty - 1;\r\n                index = shoppingCart.findIndex(cart => cart.ProductID === action.id);\r\n                shoppingCart[index] = product;\r\n                return {\r\n                    shoppingCart: [...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\r\n                }\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        case 'DELETE':\r\n            const filtered = shoppingCart.filter(product => product.ProductID !== action.id);\r\n            product = action.cart;\r\n            updatedQty = totalQty - product.qty;\r\n            updatedPrice = totalPrice - product.qty * product.ProductPrice;\r\n            return {\r\n                shoppingCart: [...filtered], totalPrice: updatedPrice, totalQty: updatedQty\r\n            }\r\n\r\n        case 'EMPTY':\r\n            return {\r\n                shoppingCart: [], totalPrice: 0, totalQty: 0\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n","import React, { createContext, useReducer } from 'react'\r\nimport { CartReducer } from './CartReducer'\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartContextProvider = (props) => {\r\n\r\n    const [cart, dispatch] = useReducer(CartReducer, { shoppingCart: [], totalPrice: 0, totalQty: 0 })\r\n\r\n    return (\r\n        <CartContext.Provider value={{ ...cart, dispatch }}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../images/logo.svg'\r\nimport { Icon } from 'react-icons-kit'\r\nimport { cart } from 'react-icons-kit/entypo/cart'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { CartContext } from '../global/CartContext'\r\nimport { auth } from '../config/Config'\r\n\r\nexport const Navbar = ({ user }) => {\r\n\r\n    const history = useHistory();\r\n    const { totalQty } = useContext(CartContext);\r\n\r\n    // handle logout\r\n    const logout = () => {\r\n        auth.signOut().then(() => {\r\n            history.push('/login');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='navbox'>\r\n            <div className='leftside'>\r\n                <Link to=\"/\">\r\n                    <img  src={logo} alt=\"\" />\r\n                </Link>\r\n            </div>\r\n            {!user && <div className='rightside'>\r\n                <span><Link to=\"signup\" className='navlink'>SIGN UP</Link></span>\r\n                <span><Link to=\"login\" className='navlink'>LOGIN</Link></span>\r\n            </div>}\r\n            {user && <div className='rightside'>\r\n                <span><Link to=\"/\" className='navlink'>{user}</Link></span>\r\n                <span><Link to=\"cartproducts\" className='navlink'><Icon icon={cart} /></Link></span>\r\n                <span className='no-of-products'>{totalQty}</span>\r\n                <span><button className='logout-btn' onClick={logout}>Logout</button></span>\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import React,{createContext} from 'react';\r\nimport {db} from '../config/Config'\r\n\r\nexport const ProductsContext = createContext();\r\nexport class ProductsContextProvider extends React.Component{\r\n\r\n    state={\r\n        products:[]\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const prevProducts = this.state.products;\r\n        db.collection('Products').onSnapshot(snapshot => {\r\n            let changes = snapshot.docChanges();\r\n            changes.forEach(change => {\r\n                if (change.type === 'added') {\r\n                    prevProducts.push({\r\n                        ProductID: change.doc.id,\r\n                        ProductName: change.doc.data().ProductName,\r\n                        ProductPrice: change.doc.data().ProductPrice,\r\n                        ProductImg: change.doc.data().ProductImg\r\n                    })\r\n                }\r\n                this.setState({\r\n                    products: prevProducts\r\n                })\r\n            })\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <ProductsContext.Provider value={{ products: [...this.state.products] }}>\r\n                {this.props.children}\r\n            </ProductsContext.Provider>\r\n        )\r\n    }\r\n}","import React, { useContext } from 'react';\r\nimport { ProductsContext } from '../global/ProductsContext';\r\nimport { CartContext } from '../global/CartContext';\r\n\r\nexport const Products = () => {\r\n    \r\n    const {products} = useContext(ProductsContext);\r\n    const { dispatch } = useContext(CartContext);\r\n\r\n    return (  \r\n        <>\r\n            {products.length !== 0 && <h1>Productos</h1>}\r\n            <div className='products-container'>\r\n                {products.length === 0 && <div>Cargando catalogo de productos, un momento...</div>}\r\n                {products.map(product => (\r\n                    <div className='product-card' key={product.ProductID}>\r\n                        <div className='product-img'>\r\n                            <img src={product.ProductImg} alt=\"not found\"/>\r\n                        </div>\r\n                        <div className='product-name'>\r\n                            {product.ProductName}\r\n                        </div>\r\n                        <div className='product-price'>\r\n                            ARS {product.ProductPrice}.00\r\n                    </div>\r\n                    <button className='addcart-btn' onClick={() => dispatch({ type: 'ADD_TO_CART', id: product.ProductID, product })}>Agregar Al Carrito</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport '../css/Home.css';\r\nimport { Navbar } from './Navbar';\r\nimport { Products } from './Products';\r\n\r\nexport const Home = ({user}) => {\r\n    return (\r\n        <div className='wrapper'>\r\n            <Navbar user={user}/>\r\n            <Products />\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, { useState } from 'react'\r\nimport { auth, db } from '../config/Config'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Signup = (props) => {\r\n\r\n    // definicion de estado\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    // signup\r\n    const signup = (e) => {\r\n        e.preventDefault();\r\n        auth.createUserWithEmailAndPassword(email, password).then((cred) => {\r\n            db.collection('SignedUpUsersData').doc(cred.user.uid).set({\r\n                Name: name,\r\n                Email: email,\r\n                Password: password\r\n            }).then(() => {\r\n                setName('');\r\n                setEmail('');\r\n                setPassword('');\r\n                setError('');\r\n                props.history.push('/login');\r\n            }).catch(err => setError(err.message));\r\n        }).catch(err => setError(err.message));\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <br />\r\n                <h2>Sign up</h2>\r\n            <br />\r\n            <form autoComplete=\"off\" className='form-group' onSubmit={signup}>\r\n                <label htmlFor=\"name\">Nombre de Usuario</label>\r\n                <input type=\"text\" className='form-control' required\r\n                    onChange={(e) => setName(e.target.value)} value={name} />\r\n                <br />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" className='form-control' required\r\n                    onChange={(e) => setEmail(e.target.value)} value={email} />\r\n                <br />\r\n                <label htmlFor=\"passowrd\">Password</label>\r\n                <input type=\"password\" className='form-control' required\r\n                    onChange={(e) => setPassword(e.target.value)} value={password} />\r\n                <br />\r\n                <button type=\"submit\" className='btn btn-success btn-md mybtn'>SUBMIT</button>\r\n            </form>\r\n            {error && <span className='error-msg'>{error}</span>}\r\n            <br />\r\n            <span>¿Ya tienes cuenta?\r\n                <Link to=\"login\"> Inicia sesión</Link>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { auth } from '../config/Config'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Login = (props) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password).then(() => {\r\n            setEmail('');\r\n            setPassword('');\r\n            setError('');\r\n            props.history.push('/');\r\n        }).catch(err => setError(err.message));\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <br />\r\n            <h2>Login</h2>\r\n            <br />\r\n            <form autoComplete=\"off\" className='form-group' onSubmit={login}>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" className='form-control' required\r\n                    onChange={(e) => setEmail(e.target.value)} value={email} />\r\n                <br />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" className='form-control' required\r\n                    onChange={(e) => setPassword(e.target.value)} value={password} />\r\n                <br />\r\n                <button type=\"submit\" className='btn btn-success btn-md mybtn'>LOGIN</button>\r\n            </form>\r\n            {error && <span className='error-msg'>{error}</span>}\r\n            <br/>\r\n            <span>¿No tienes cuenta? \r\n                <Link to=\"signup\"> Crea una cuenta aquí</Link>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { CartContext } from '../global/CartContext'\r\nimport { Navbar } from './Navbar';\r\nimport { Icon } from 'react-icons-kit'\r\nimport { ic_add } from 'react-icons-kit/md/ic_add'\r\nimport { ic_remove } from 'react-icons-kit/md/ic_remove'\r\nimport { iosTrashOutline } from 'react-icons-kit/ionicons/iosTrashOutline'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { auth } from '../config/Config'\r\n\r\nexport const Cart = ({ user }) => {\r\n\r\n    const { shoppingCart, dispatch, totalPrice, totalQty } = useContext(CartContext);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                history.push('/login');\r\n            }\r\n        })\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Navbar user={user} />\r\n            <>\r\n                {shoppingCart.length !== 0 && <h1>Carrito</h1>}\r\n                <div className='cart-container'>\r\n                    {\r\n                        shoppingCart.length === 0 && <>\r\n                            <div>No hay articulos en el carrito</div>\r\n                            <div><Link to=\"/\">Volver al Inicio</Link></div>\r\n                        </>\r\n                    }\r\n                    {shoppingCart && shoppingCart.map(cart => (\r\n                        <div className='cart-card' key={cart.ProductID}>\r\n\r\n                            <div className='cart-img'>\r\n                                <img src={cart.ProductImg} alt=\"not found\" />\r\n                            </div>\r\n\r\n                            <div className='cart-name'>{cart.ProductName}</div>\r\n\r\n                            <div className='cart-price-orignal'>ARS {cart.ProductPrice}.00</div>\r\n\r\n                            <div className='inc' onClick={() => dispatch({ type: 'INC', id: cart.ProductID, cart })}>\r\n                                <Icon icon={ic_add} size={24} />\r\n                            </div>\r\n\r\n                            <div className='quantity'>{cart.qty}</div>\r\n\r\n                            <div className='dec' onClick={() => dispatch({ type: 'DEC', id: cart.ProductID, cart })}>\r\n                                <Icon icon={ic_remove} size={24} />\r\n                            </div>\r\n\r\n                            <div className='cart-price'>\r\n                                ARS {cart.TotalProductPrice}.00\r\n                            </div>\r\n\r\n                            <button className='delete-btn' onClick={() => dispatch({ type: 'DELETE', id: cart.ProductID, cart })}>\r\n                                <Icon icon={iosTrashOutline} size={24} />\r\n                            </button>\r\n                        </div>\r\n                    ))\r\n                    }\r\n                    {shoppingCart.length > 0 && <div className='cart-summary'>\r\n                        <div className='cart-summary-heading'>\r\n                        Resumen de la compra\r\n                        </div>\r\n                        <div className='cart-summary-price'>\r\n                            <span>Total</span>\r\n                            <span>{totalPrice}</span>\r\n                        </div>\r\n                        <div className='cart-summary-price'>\r\n                            <span>Cantidad de Articulos</span>\r\n                            <span>{totalQty}</span>\r\n                        </div>\r\n                        <Link to='cashout' className='cashout-link'>\r\n                            <button className='btn btn-success btn-md' style={{ marginTop: 5 + 'px' }}>\r\n                                Proceder a la compra\r\n                        </button>\r\n                        </Link>\r\n                    </div>}\r\n                </div>\r\n            </>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\nimport { auth, db } from '../config/Config'\r\nimport { CartContext } from '../global/CartContext'\r\nimport { Navbar } from './Navbar';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nexport const Cashout = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const { totalPrice, totalQty, dispatch } = useContext(CartContext);\r\n\r\n    // defining state\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [cell, setCell] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [successMsg, setSuccessMsg] = useState('');\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                db.collection('SignedUpUsersData').doc(user.uid).onSnapshot(snapshot => {\r\n                    setName(snapshot.data().Name);\r\n                    setEmail(snapshot.data().Email);\r\n                })\r\n            }\r\n            else {\r\n                history.push('/login')\r\n            }\r\n        })\r\n    })\r\n\r\n    const cashoutSubmit = (e) => {\r\n        e.preventDefault();\r\n        auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                const date = new Date();\r\n                const time = date.getTime();\r\n                db.collection('Buyer-info ' + user.uid).doc('_' + time).set({\r\n                    BuyerName: name,\r\n                    BuyerEmail: email,\r\n                    BuyerCell: cell,\r\n                    BuyerAddress: address,\r\n                    BuyerPayment: totalPrice,\r\n                    BuyerQuantity: totalQty\r\n                }).then(() => {\r\n                    setCell('');\r\n                    setAddress('');\r\n                    dispatch({ type: 'EMPTY' })\r\n                    setSuccessMsg('Su pedido se ha realizado correctamente. Gracias por visitarnos. Serás redirigido a la página de inicio después de 5 segundos...');\r\n                    setTimeout(() => {\r\n                        history.push('/')\r\n                    }, 5000)\r\n                }).catch(err => setError(err.message))\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar user={props.user} />\r\n            <div className='container'>\r\n                <br />\r\n                <h2>Detalles de la compra</h2>\r\n                <br />\r\n                {successMsg && <div className='success-msg'>{successMsg}</div>}\r\n                <form autoComplete=\"off\" className='form-group' onSubmit={cashoutSubmit}>\r\n                    <label htmlFor=\"name\">Nombre</label>\r\n                    <input type=\"text\" className='form-control' required\r\n                        value={name} disabled />\r\n                    <br />\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" className='form-control' required\r\n                        value={email} disabled />\r\n                    <br />\r\n                    <label htmlFor=\"Cell No\">Telefono</label>\r\n                    <input type=\"number\" className='form-control' required\r\n                        onChange={(e) => setCell(e.target.value)} value={cell} placeholder='+549123456778' />\r\n                    <br />\r\n                    <label htmlFor=\"Delivery Address\">Direccion de Entrega</label>\r\n                    <input type=\"text\" className='form-control' required\r\n                        onChange={(e) => setAddress(e.target.value)} value={address} />\r\n                    <br />\r\n                    <label htmlFor=\"Price To Pay\">Precio a pagar</label>\r\n                    <input type=\"number\" className='form-control' required\r\n                        value={totalPrice} disabled />\r\n                    <br />\r\n                    <label htmlFor=\"Total No of Products\">Total de Products</label>\r\n                    <input type=\"number\" className='form-control' required\r\n                        value={totalQty} disabled />\r\n                    <br />\r\n                    <button type=\"submit\" className='btn btn-success btn-md mybtn'>SUBMIT</button>\r\n                </form>\r\n                {error && <span className='error-msg'>{error}</span>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div>\r\n            Error 404 Page not Found or not Exist\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\nimport { AddProducts} from './components/AddProducts';\nimport { Home } from './components/Home';\nimport { ProductsContextProvider } from './global/ProductsContext';\nimport { Signup } from './components/Signup';\nimport { Login } from './components/Login';\nimport { auth, db } from './config/Config'\nimport { CartContextProvider } from './global/CartContext';\nimport { Cart } from './components/Cart'\nimport { Cashout } from './components/Cashout'\nimport { NotFound } from './components/NotFound'\n\nclass App extends Component {\n\n  state = {\n    user: null,\n}\n\ncomponentDidMount() {\n\n    // getting user info for navigation bar\n    auth.onAuthStateChanged(user => {\n        if (user) {\n            db.collection('SignedUpUsersData').doc(user.uid).get().then(snapshot => {\n                this.setState({\n                    user: snapshot.data().Name\n                })\n            })\n        }\n        else {\n            this.setState({\n                user: null\n            })\n        }\n    })\n\n}\n\n  render() {\n    return (\n      <ProductsContextProvider>\n        <CartContextProvider>\n          <BrowserRouter>\n            <Switch>\n              <Route exact path = '/ReactBioarkePage'component={() => <Home user={this.state.user} />} />\n              <Route path='/addproducts' component={AddProducts}/>\n              <Route path='/signup' component={Signup}/>\n              <Route path='/login' component={Login}/>\n              <Route path=\"/cartproducts\" component={() => <Cart user={this.state.user} />} />\n              <Route path='/cashout' component={() => <Cashout user={this.state.user} />} />\n              <Route component={NotFound} />\n            </Switch>\n          </BrowserRouter>\n        </CartContextProvider>\n      </ProductsContextProvider>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n\n    <App />,\n    \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}